upstream backend_12345 {
#    This is for load balancing.
#    hash $scheme$request_uri; 
     hash ip_hash;
     server 192.168.1.1:12345;
     server 192.168.1.2:54321;
}

server {
    listen       8080;
    listen       8443;
    server_name  myserver.org;
    
    ssl on;
    ssl_certificate     ssl/chained_certificate.cer;
#    ssl_certificate     ssl/certificate.cer;
    ssl_certificate_key ssl/key_no_password.key;

#    This does not work as it seams it must. 
#    The page does not load in the end of redirection.
#    rewrite ^/$ /fx/ permanent;
#    rewrite ^/fx$ /fx/ permanent;

#    But this works well.
    rewrite ^/$ /fx/ last;
    rewrite ^/fx$ /fx/ last;
   
#   This does not work sa it seams it should.
#   If client goes to http this is not redirecting to HTTPS.
#   return 302 https://$server_name:19443$request_uri;    

#   And this works.
    error_page 497 301 =307 https://$server_name:8443$request_uri;
    
    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    location /fx {
#           Wery weired construction refers to upstream section
	    proxy_pass                         http://backend_12345;
#           This is what is going to be shown in address line

#           Bunch of headers redirect stuff	    
            proxy_redirect	               https://myserver.org:8443/ /;
            proxy_set_header                   Host $host;
            proxy_set_header                   X-Real-IP $remote_addr;
            proxy_set_header                   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header                   X-Forwarded-Host $server_name;

            proxy_connect_timeout 3600s;
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            send_timeout 3600s;
    }

    #error_page  404              /404.html;
    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
